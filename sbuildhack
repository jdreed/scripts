#!/bin/sh

# Wrapper around sbuild.  The main purpose is to append a
# distribution-dependent string like "~ubuntu7.10" to the binary
# package version

# This script us normally run as "da sbuildhack filename.dsc".

# This script will skip dists listed in ./nobuild.

usage() {
    echo "Usage: $0 <dist>-<arch> ..." >&2
    exit 1
}

. $(dirname "$0")/debian-versions.sh

dist_arch=$1; shift
if [ -z "$dist_arch" ]; then usage; fi
IFS=- read dist arch <<EOF
$dist_arch
EOF
if [ -z "$dist" ] || [ -z "$arch" ]; then usage; fi

dscfile=
for i in "$@"; do
  if echo "$i" | grep -q '\.dsc$'; then
    dscfile=$i
  fi
done

[ -n "$dscfile" ] || usage

NOBUILD=$(grep-dctrl -n -s Debathena-No-Build -F Debathena-No-Build -e . "$dscfile")
BUILDFOR=$(grep-dctrl -n -s Debathena-Build-For -F Debathena-Build-For -e . "$dscfile")

if [ -n "$NOBUILD" ] && [ -n "$BUILDFOR" ]; then
    echo "It is an error to specify both Debathena-Build-For and Debathena-No-Build fields."
    echo "Pick one and try again."
    exit 1
fi

if [ -z "$NOBUILD" ] && [ -z "$BUILDFOR" ] && [ -e nobuild ]; then
    NOBUILD="$(cat nobuild)"
    echo "NOTE: Please migrate ./nobuild to XSC-Debathena-No-Build!"
fi

if [ -n "$NOBUILD" ] && echo "$NOBUILD" | fgrep -q "$dist"; then
  echo "Skipping $dist since it is listed in the Debathena-No-Build field"
  exit
fi

if [ -n "$BUILDFOR" ] && ! echo "$BUILDFOR" | fgrep -q "$dist"; then
  echo "Skipping $dist since it is not listed in the Debathena-Build-For field"
  exit
fi

sbuild --append-to-version=`gettag "$dist"` \
	-d "$dist" --arch="$arch" \
	--apt-update --apt-distupgrade \
	--setup-hook="$(readlink -f "$(dirname "$0")/chroot-sources")" \
	-v "$@"
